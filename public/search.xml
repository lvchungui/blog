<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>谷歌浏览器访问</title>
    <url>/2022/10/02/tech-article/1.%E8%B0%B7%E6%AD%8C%E6%B5%8F%E8%A7%88%E5%99%A8%E8%AE%BF%E9%97%AE/</url>
    <content><![CDATA[<h2 id="1-下载谷歌浏览器"><a href="#1-下载谷歌浏览器" class="headerlink" title="1 下载谷歌浏览器"></a>1 下载谷歌浏览器</h2><ul>
<li>下载地址：<a href="https://www.google.cn/intl/zh-CN/chrome/">https://www.google.cn/intl/zh-CN/chrome/</a></li>
<li>设值中文：打开谷歌浏览器→点击右上角的设置→点击左侧的language→点击中文简体右侧的按钮→选择以这种语言显示 Google Chrome→重启浏览器即可</li>
</ul>
<h2 id="2-下载访问插件"><a href="#2-下载访问插件" class="headerlink" title="2 下载访问插件"></a>2 下载访问插件</h2><ul>
<li>下载地址：<a href="https://pan.baidu.com/s/1zu5wdyrFlMOj14fgY5Bb-Q?pwd=wud4">https://pan.baidu.com/s/1zu5wdyrFlMOj14fgY5Bb-Q?pwd=wud4</a></li>
</ul>
<h2 id="3-安装插件"><a href="#3-安装插件" class="headerlink" title="3 安装插件"></a>3 安装插件</h2><ul>
<li>打开谷歌浏览器→点击右上角的扩展程序→打开右上角的开发者模式→把下载好的访问插件直接拖进去即可访问</li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>谷歌</tag>
      </tags>
  </entry>
  <entry>
    <title>生成ssh公共秘钥</title>
    <url>/2022/08/06/tech-article/2.%E7%94%9F%E6%88%90ssh%E5%85%AC%E5%85%B1%E7%A7%98%E9%92%A5/</url>
    <content><![CDATA[<h2 id="1-设置用户名和邮箱"><a href="#1-设置用户名和邮箱" class="headerlink" title="1 设置用户名和邮箱"></a>1 设置用户名和邮箱</h2><ul>
<li><p>右键选择<code>Git Bash Here</code>，在命令框中输入执行下面两条命令</p>
  <figure class="highlight c"><table><tr><td class="code"><pre><span class="line">git config --global user.name “yourname”</span><br><span class="line">git config --global user.email“your@email.com<span class="string">&quot;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>注：yourname是你要设置的名字，your@email是你要设置的邮箱</p>
</blockquote>
</li>
</ul>
<h2 id="2-删除-ssh文件夹下的-known-hosts"><a href="#2-删除-ssh文件夹下的-known-hosts" class="headerlink" title="2 删除.ssh文件夹下的 known_hosts"></a>2 删除.ssh文件夹下的 known_hosts</h2><ul>
<li>known_host文件在<code>C:\Users\61772\.ssh</code></li>
<li>如果是首次生成则忽略这步</li>
</ul>
<h2 id="3-生成秘钥"><a href="#3-生成秘钥" class="headerlink" title="3 生成秘钥"></a>3 生成秘钥</h2><ul>
<li><p>在git命令框中执行下面命令</p>
  <figure class="highlight c"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;your@email.com&quot;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>注：请填你设置的邮箱地址  </p>
</blockquote>
</li>
<li><p>一路yes和回车，然后系统会自动在.ssh文件夹下生成两个文件，id_rsa和id_rsa.pub</p>
</li>
</ul>
<h2 id="4-在-Github-x2F-Gitee-中添加秘钥"><a href="#4-在-Github-x2F-Gitee-中添加秘钥" class="headerlink" title="4 在 Github&#x2F;Gitee 中添加秘钥"></a>4 在 Github&#x2F;Gitee 中添加秘钥</h2><ul>
<li>用记事本打开 id_rsa.pub 将全部的内容复制</li>
<li>打开 Github&#x2F;Gitee →进入设置→进入ssh设置→点击添加秘钥，然后将刚刚复制的粘贴进去就可以了</li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>ssh公共秘钥</tag>
      </tags>
  </entry>
  <entry>
    <title>Git的简单使用</title>
    <url>/2022/08/09/tech-article/3.Git%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<ul>
<li>这里介绍两种简单方法，一种是使用命令的方式，另一种是图形化的方式，这里推荐使用图形化方式上传。先下载安装 git 和 tortoise git，必须先安装 git 才能安装 tortoise git</li>
<li>git 下载地址：<a href="https://git-scm.com/">https://git-scm.com/</a></li>
<li>git 安装教程：<a href="https://blog.csdn.net/qq_46351233/article/details/124733661">https://blog.csdn.net/qq_46351233/article/details/124733661</a></li>
<li>tortoise git 下载地址：<a href="https://tortoisegit.org/download/">https://tortoisegit.org/download/</a></li>
<li>tortoise git 安装教程：<a href="http://t.zoukankan.com/jpfss-p-8027543.html">http://t.zoukankan.com/jpfss-p-8027543.html</a></li>
</ul>
<h2 id="以git命令方式上传"><a href="#以git命令方式上传" class="headerlink" title="以git命令方式上传"></a>以git命令方式上传</h2><ol>
<li>复制仓库地址→右键选择<code>Git Bash Here</code>→在命令框中输入<code>git clone 仓库地址</code>即可把仓库克隆到本地</li>
<li>把自己的代码放到刚克隆过来的文件夹里→右键选择<code>Git Bash Here</code>→输入<code>git add .</code>回车→输入<code>git commit -m&quot;提交日志&quot;</code>回车→最后输入<code>git pull</code>回车即可上传成功</li>
</ol>
<h2 id="以图形化方式上传"><a href="#以图形化方式上传" class="headerlink" title="以图形化方式上传"></a>以图形化方式上传</h2><ol>
<li><p>git add </p>
<ul>
<li><p>右击标记为 蓝色 ? (表示该文件未使用 git 管理) 的目录，弹出的对话框中勾选具体需要管理的文件，勾选完毕点击 ok 即可，此时图标变成红色感叹号(表示该文件被git管理，但是未提交内容)</p>
<p>   <img src="/../images/12.png"></p>
</li>
</ul>
</li>
<li><p>git commit</p>
<ul>
<li><p>将修改内容提交到本地每提交一次，就是一个版本. 比如开发完某个功能模块，就可以提交一次了，后续进行版本回退都是以提交为准.注意: 此时只是提交到本地，Github 上还看不到代码变更，右键选择红色感叹号目录，选择 Git commit -&gt; master</p>
</li>
<li><p>此时弹出了一个对话框. 可以在此处看到都需要提交哪些文件, 以及每个文件的具体改动情况. 并且需要输入提交日志. 描述这次提交的具体改动原因是什么. 这个日志是后续进行版本回退的重要参考依据</p>
<p>   <img src="/../images/13.png"></p>
<p>   <img src="/../images/14.png"></p>
</li>
</ul>
</li>
<li><p>git push</p>
<ul>
<li>提交的内容需要同步到服务器上, 才能让其他人看到改动. 使用 push 即可，右键需要 push 的目录, 点击 push</li>
</ul>
</li>
</ol>
<ul>
<li>解决no supported authentication methods avaiable<ul>
<li><p>找到TortoiseGit -&gt;Settings（设置）-&gt;Network（网络）</p>
</li>
<li><p>将SSH client指向E:\git\Git\usr\bin\ssh.exe （我的Git工具安装E盘）,这里更改ssh 路径的时候，要把上面的勾打上，点击应用，再确定</p>
<p>   <img src="/../images/15.png"></p>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Git同时上传代码至Github和Gitee</title>
    <url>/2022/08/09/tech-article/4.Git%E5%90%8C%E6%97%B6%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81%E8%87%B3Github%E5%92%8CGitee/</url>
    <content><![CDATA[<ol>
<li><p>先克隆一个Gitee上的仓库到本地</p>
</li>
<li><p>然后修改项目<code>.git</code>目录下的<code>config</code>文件，把GitHub的仓库地址增加到如下图位置保存即可</p>
<p> <img src="/../images/10.png" alt="1"></p>
<p> <img src="/../images/11.png" alt="2"></p>
</li>
<li><p>看不到.git文件打开显示隐藏项目即可</p>
<p> <img src="/../images/8f8037b8966594e1061a3a9b0905b7c5fe19c6148a84110c903ea4196850c60d.png" alt="图 1"></p>
</li>
</ol>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>Github</tag>
        <tag>Gitee</tag>
      </tags>
  </entry>
  <entry>
    <title>Github加速访问</title>
    <url>/2022/08/05/tech-article/5.github%E5%8A%A0%E9%80%9F%E8%AE%BF%E9%97%AE/</url>
    <content><![CDATA[<h2 id="1-软件介绍"><a href="#1-软件介绍" class="headerlink" title="1 软件介绍"></a>1 软件介绍</h2><ul>
<li>github加速神器：FastGithub</li>
<li>开源项目地址：<a href="https://github.com/dotnetcore/FastGithub">https://github.com/dotnetcore/FastGithub</a></li>
</ul>
<h2 id="2-软件功能"><a href="#2-软件功能" class="headerlink" title="2 软件功能"></a>2 软件功能</h2><ul>
<li>解决github打不开、用户头像无法加载、releases无法上传下载、git-clone、git-pull、git-push失败等问题</li>
<li>提供域名的纯净IP解析</li>
<li>提供IP测速并选择最快的IP</li>
<li>提供域名的tls连接自定义配置</li>
<li>google的CDN资源替换，解决大量国外网站无法加载js和css的问题</li>
</ul>
<h2 id="3-软件下载"><a href="#3-软件下载" class="headerlink" title="3 软件下载"></a>3 软件下载</h2><ul>
<li>主链接：<a href="https://github.com/dotnetcore/fastgithub/releases">https://github.com/dotnetcore/fastgithub/releases</a></li>
<li>备用链接：<a href="https://pan.baidu.com/s/1ewHysiOaGsPH0yttFEVrvA?pwd=4qrh">https://pan.baidu.com/s/1ewHysiOaGsPH0yttFEVrvA?pwd=4qrh</a></li>
</ul>
<h2 id="4-软件的使用"><a href="#4-软件的使用" class="headerlink" title="4 软件的使用"></a>4 软件的使用</h2><ul>
<li>Windows-x64桌面：双击运行FastGithub.UI.exe</li>
</ul>
<h2 id="5-证书验证问题"><a href="#5-证书验证问题" class="headerlink" title="5 证书验证问题"></a>5 证书验证问题</h2><h3 id="5-1-Git"><a href="#5-1-Git" class="headerlink" title="5.1 Git"></a>5.1 Git</h3><ul>
<li>相关问题：git操作提示<code>SSL certificate problem</code></li>
<li>解决方法：需要关闭git的证书验证，在git的命令框中输入：<code>git config --global http.sslverify false</code></li>
</ul>
<h3 id="5-2-火狐浏览器"><a href="#5-2-火狐浏览器" class="headerlink" title="5.2 火狐浏览器"></a>5.2 火狐浏览器</h3><ul>
<li>相关问题：firefox提示连接有潜在的安全问题</li>
<li>解决方法：设置→隐私与安全→证书→查看证书→证书颁发机构，导入<code>fastgithub.cer</code>文件（这个文件在cacert文件夹下），然后勾选“信任由此证书颁发机构来标识网站”</li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>VScode中上传到Gitee或Github</title>
    <url>/2022/08/09/tech-article/6.VScode%E4%B8%AD%E4%B8%8A%E4%BC%A0%E5%88%B0Gitee%E6%88%96Github/</url>
    <content><![CDATA[<ol>
<li><p>先把Gitee或Gihub的仓库克隆到本地</p>
</li>
<li><p>在VScode中打开克隆过来的文件夹，先暂存后提交，最后同步更新即可  </p>
</li>
<li><p>使用VSCode中报错信息：Git installation not found 解决方法</p>
<p><img src="/../images/ff9a6633df31b7281fca932bc889d5170b76a56e2fc1762c25d37fa7f96b01c7.png" alt="图 5">  </p>
<ul>
<li><p>设置→输入命令“git.path”→点击“在settings.json中编辑”</p>
<p> <img src="/../images/0480e70d8820102e78ddf38cfcd989356fdaeab6c43dea384e9c72167f4b10e7.png" alt="图 6">  </p>
<p> <img src="/../images/9789b9834c93b1b6b448d3bf2b3503d84e48490c8daf5331abd5cecbb87841c6.png" alt="图 7">  </p>
</li>
<li><p>添加Git的安装地址，在git.path那里输入我们git的安装地址：注意分隔符为“&#x2F;”,而不是“\”</p>
<p> <img src="/../images/bfbed60bcbc01b4b18cfb234fa34cd5c7e27fc44b253a2490800b027b625e4b6.png" alt="图 8"> </p>
</li>
<li><p>重启VScode即可</p>
</li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Github</tag>
        <tag>Gitee</tag>
        <tag>VScode</tag>
      </tags>
  </entry>
  <entry>
    <title>Github/Gitee+hexo搭建个人博客</title>
    <url>/2022/10/02/tech-article/7.Github+hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h2 id="1-环境安装"><a href="#1-环境安装" class="headerlink" title="1 环境安装"></a>1 环境安装</h2><ol>
<li>下载安装：<a href="https://nodejs.org/zh-cn/download/">node.js</a></li>
<li>安装 hexo <figure class="highlight py"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li>
<li>在一个空文件夹里初始化hexo <figure class="highlight py"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure></li>
<li>本地预览 hexo 使用以下命令，浏览器打开 <a href="http://localhost:4000/">http://localhost:4000</a> 就可以看到hexo的初始界面了 <figure class="highlight py"><table><tr><td class="code"><pre><span class="line">hexo s      <span class="comment">#本地预览</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="2-主题安装"><a href="#2-主题安装" class="headerlink" title="2 主题安装"></a>2 主题安装</h2><ol>
<li>安装 ayer 主题（如果想要安装其他主题到 <a href="https://hexo.io/themes/">hexo官方主题库</a> 寻找即可） <figure class="highlight py"><table><tr><td class="code"><pre><span class="line">npm i hexo-theme-ayer -S</span><br></pre></td></tr></table></figure></li>
<li>将博客根目录下的 <code>_config.yml</code> 里的 <code>theme</code> 值修改成 <code>ayer</code></li>
<li>主题配置：找到 <code>ayer</code> 主题目录下的 <code>_config.yml</code> 文件自行配置</li>
</ol>
<h2 id="3-插件安装"><a href="#3-插件安装" class="headerlink" title="3 插件安装"></a>3 插件安装</h2><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>
<p>安装完成后将以下配置复制到你博客根目录下的 <code>_config.yml</code> 里（注意不是 <code>ayer</code> 目录下的）:</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># hexo-generator-searchdb</span></span><br><span class="line">search:</span><br><span class="line">path: search.xml</span><br><span class="line">field: post</span><br><span class="line"><span class="built_in">format</span>: html</span><br></pre></td></tr></table></figure>

<h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure>
<p>安装完成后找到 <code>/source/categories/index.md</code> 文件，默认内容如下：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: <span class="number">2022</span>-<span class="number">10</span>-02 <span class="number">14</span>:<span class="number">35</span>:<span class="number">38</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>在上面内容后面添加两行代码，添加后的内容如下：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: <span class="number">2022</span>-<span class="number">10</span>-02 <span class="number">14</span>:<span class="number">35</span>:<span class="number">38</span></span><br><span class="line"><span class="built_in">type</span>: <span class="string">&quot;categories&quot;</span></span><br><span class="line">layout: <span class="string">&quot;categories&quot;</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>① 文章分类：打开需要添加分类的文章，在开头为其添加 <code>categories</code> 属性<br>② <code>categories: - 其他</code>表示添加这篇文章到 <code>其他</code> 这个分类<br>③ 注意：hexo一篇文章只能属于一个分类，也就是说如果在 <code>- 其他</code> 下方添加 <code>- xxx</code>，hexo不会产生两个分类，而是把分类嵌套（即该文章属于 <code>- 其他</code> 下的 <code>-xxx</code> 分类）</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Github+hexo搭建个人博客</span><br><span class="line">categories: </span><br><span class="line">- 其他</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<h3 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure>
<p>安装完成后找到 <code>/source/tags/index.md</code> 文件，默认内容如下：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: <span class="number">2022</span>-<span class="number">10</span>-02 <span class="number">15</span>:<span class="number">11</span>:<span class="number">19</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>在上面内容后面添加两行代码，添加后的内容如下：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: <span class="number">2022</span>-<span class="number">10</span>-02 <span class="number">15</span>:<span class="number">11</span>:<span class="number">19</span></span><br><span class="line"><span class="built_in">type</span>: <span class="string">&quot;tags&quot;</span></span><br><span class="line">layout: <span class="string">&quot;tags&quot;</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>① 添加标签：打开需要添加分类的文章，在开头为其添加 <code>tags</code> 属性<br>② <code>tags: - hexo</code>表示为这篇文章添加 <code>hexo</code> 这个标签<br>③ 点击首页的<code>标签</code>可以看到该标签下的所有文章</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Github+hexo搭建个人博客</span><br><span class="line">categories: </span><br><span class="line">- 其他</span><br><span class="line">tags:</span><br><span class="line">- hexo</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<h3 id="相册"><a href="#相册" class="headerlink" title="相册"></a>相册</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">hexo new page photos</span><br></pre></td></tr></table></figure>
<p>然后将以下内容复制到 <code>/source/photos/index.md</code> 文件，<code>img_url</code> 替换成图片路径，<code>caption</code> 替换成图片名称：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Gallery</span><br><span class="line"></span><br><span class="line">albums: [[<span class="string">&quot;img_url&quot;</span>, <span class="string">&quot;img_caption&quot;</span>], [<span class="string">&quot;img_url&quot;</span>, <span class="string">&quot;img_caption&quot;</span>]]</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>最后在 <code>ayer</code> 目录下的 <code>_config.yml</code> 里的 <code>menu</code> 下添加 <code>相册: /photos</code> 即可</p>
<h3 id="二次元看板娘"><a href="#二次元看板娘" class="headerlink" title="二次元看板娘"></a>二次元看板娘</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure>
<p>然后将以下配置复制到你博客根目录下的 <code>_config.yml</code> 里（注意不是 <code>ayer</code> 目录下的）:</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  enable: true  <span class="comment"># 是否启动</span></span><br><span class="line">  scriptFrom: local <span class="comment"># 默认</span></span><br><span class="line">  pluginRootPath: live2dw/  <span class="comment"># 插件在站点上的根目录(相对路径)</span></span><br><span class="line">  pluginJsPath: lib/  <span class="comment"># 脚本文件相对与插件根目录路径</span></span><br><span class="line">  pluginModelPath: assets/  <span class="comment"># 模型文件相对与插件根目录路径</span></span><br><span class="line">  tagMode: false  <span class="comment"># 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span></span><br><span class="line">  debug: false  <span class="comment"># 调试, 是否在控制台输出日志</span></span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget  <span class="comment">## 模型文件</span></span><br><span class="line">  display:</span><br><span class="line">    position: right <span class="comment"># 定位方向 left right top bottom</span></span><br><span class="line">    width: <span class="number">150</span>  <span class="comment"># 小人宽度</span></span><br><span class="line">    height: <span class="number">300</span> <span class="comment">#  小人高度</span></span><br><span class="line">    hOffset: -<span class="number">15</span>  <span class="comment"># 向 偏移</span></span><br><span class="line">    vOffset: -<span class="number">15</span>  <span class="comment"># 像 偏移</span></span><br><span class="line">  mobile:</span><br><span class="line">    show: true  <span class="comment"># 手机端是否显示</span></span><br><span class="line">  react:</span><br><span class="line">    opacity: <span class="number">0.7</span>  <span class="comment"># 模型透明度</span></span><br></pre></td></tr></table></figure>
<p>① <a href="https://huaji8.top/post/live2d-plugin-2.0/">下载模型</a>，在里面找到自己喜欢的一款模型然后下载即可，比方说作者喜欢的是 <code>koharu</code> 这个模型，那么就使用 <code>npm install --save live2d-widget-model-koharu</code> 进行安装<br>② 安装后我们在 <code>node_modules</code> 目录下面找到 <code>live2d-widget-model-koharu</code> 这个文件夹，把这个文件夹复制在我们的hexo博客的根目录(因为我们是在根目录的 <code>_config.yml</code> 里添加的配置)<br>③ 最后我们打开添加的配置文件，找到下面这行，把use后面改成我们刚才复制过来的文件夹的名称即可</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">model:</span><br><span class="line">    use: live2d-widget  <span class="comment">## 模型文件</span></span><br></pre></td></tr></table></figure>
<p>更多插件可以在<a href="https://hexo.io/plugins/">hexo官方插件库</a>里查找</p>
<h2 id="4-部署在Github-x2F-Gitee"><a href="#4-部署在Github-x2F-Gitee" class="headerlink" title="4 部署在Github&#x2F;Gitee"></a>4 部署在Github&#x2F;Gitee</h2><ol>
<li><p>安装<code>git</code>部署插件</p>
  <figure class="highlight py"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure>
</li>
<li><p>在配置文件<code>_config.yml</code>下分别修改以下内容（我这里是部署在Gitee上，部署在Github同理）</p>
  <figure class="highlight py"><table><tr><td class="code"><pre><span class="line">url:  https://lvchungui.gitee.io <span class="comment"># 仓库使用page服务后的网址</span></span><br><span class="line">root: /</span><br></pre></td></tr></table></figure>
  <figure class="highlight py"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: https://gitee.com/lvchungui/lvchungui.git <span class="comment"># 仓库的地址</span></span><br><span class="line">  branch: master <span class="comment"># 要上传的分支</span></span><br></pre></td></tr></table></figure>
<p>  注意：仓库的网址和地址一定要对应</p>
</li>
<li><p>最后依次执行以下命令即可</p>
  <figure class="highlight py"><table><tr><td class="code"><pre><span class="line">hexo c <span class="comment"># 清除缓存文件 (db.json) 和已生成的静态文件 (public)</span></span><br><span class="line">hexo g <span class="comment"># 生成静态文件</span></span><br><span class="line">hexo d <span class="comment"># 部署网站</span></span><br><span class="line"><span class="comment"># hexo g 和 hexo d 可以合并写成 hexo g -d</span></span><br></pre></td></tr></table></figure>
<p>  可能遇到的问题：’git’ 不是内部或外部命令，也不是可运行的程序<br>  <a href="https://www.cnblogs.com/ldq678/p/13287924.html">解决方法</a>：找到git的安装目录→打开系统环境变量→在用户变量和系统变量下的Path中新建一个→然后把git的安装目录的路径复制进去即可</p>
</li>
</ol>
<h2 id="5-图片不显示问题"><a href="#5-图片不显示问题" class="headerlink" title="5 图片不显示问题"></a>5 图片不显示问题</h2><ul>
<li>资源(Asset)代表source文件夹中除了文章以外的所有文件，例如图片、CSS、JS文件等。比方说，如果你的Hexo项目中有图片，那最简单的方法就是将它们放在<code>source/images</code> 文件夹中。然后通过类似于<code>![](/images/image.jpg）</code>的方法访问它们</li>
</ul>
<h2 id="6-绑定域名"><a href="#6-绑定域名" class="headerlink" title="6 绑定域名"></a>6 绑定域名</h2><ol>
<li><p>购买一个域名（我这里使用腾讯云做个示范）</p>
</li>
<li><p>进入腾讯云→点开我的域名→点击解析</p>
<p> <img src="/../images/14e2a7269aea8c27311fee1d04ede690d948ac65e2dc33905a2ba4b8b250bc48.png" alt="图 1">  </p>
</li>
<li><p>如图所示，添加两条记录（记录值是你的博客网址）</p>
<p> <img src="/../images/a6ddc94d4d4cda83ffc91ca54997724bf0cbcd40f8cd6136cca7bc4df29c4536.png" alt="图 2">  </p>
</li>
<li><p>打开博客仓库→点击page服务→绑定域名</p>
<p> <img src="/../images/b7b0d55a8109b23eabc0510f7001fa0dec8a839c135412a8aa1b2d2416951ad1.png" alt="图 3"></p>
</li>
</ol>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
